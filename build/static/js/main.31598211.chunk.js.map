{"version":3,"sources":["components/ProjectShowCase/index.js","App.js","index.js"],"names":["categoriesList","id","displayText","apiStatusConstants","ProjectsShowCase","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeCategoryId","projects","apiStatus","fetchProjects","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","updatedProjects","wrap","_context","prev","next","setState","fetch","sent","ok","json","map","each","imageUrl","image_url","name","Error","t0","stop","handleCategoryChange","event","target","value","renderSuccessView","_jsx","className","children","_jsxs","src","alt","renderInProgressView","Loader","type","color","height","width","renderFailureView","onClick","retry","renderPageView","_createClass","key","this","onChange","category","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31598211.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\n\nconst categoriesList = [\n  {id: 'ALL', displayText: 'All'},\n  {id: 'STATIC', displayText: 'Static'},\n  {id: 'RESPONSIVE', displayText: 'Responsive'},\n  {id: 'DYNAMIC', displayText: 'Dynamic'},\n  {id: 'REACT', displayText: 'React'},\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass ProjectsShowCase extends Component {\n  state = {\n    activeCategoryId: categoriesList[0].id,\n    projects: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.fetchProjects()\n  }\n\n  fetchProjects = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {activeCategoryId} = this.state\n    const url = `https://apis.ccbp.in/ps/projects?category=${activeCategoryId}`\n    try {\n      const response = await fetch(url)\n      if (response.ok) {\n        const data = await response.json()\n        const updatedProjects = data.projects.map(each => ({\n          id: each.id,\n          imageUrl: each.image_url,\n          name: each.name,\n        }))\n        this.setState({\n          projects: updatedProjects,\n          apiStatus: apiStatusConstants.success,\n        })\n      } else {\n        throw new Error('Failed to fetch projects')\n      }\n    } catch (error) {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  handleCategoryChange = event => {\n    this.setState({activeCategoryId: event.target.value}, this.fetchProjects)\n  }\n\n  renderSuccessView = () => {\n    const {projects} = this.state\n    return (\n      <ul className=\"ul-card\">\n        {projects.map(each => (\n          <li className=\"li-card\" key={each.id}>\n            <img className=\"image\" src={each.imageUrl} alt={each.name} />\n            <p className=\"heading\">{each.name}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  renderInProgressView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"card\">\n      <img\n        className=\"image\"\n        src=\"https://assets.ccbp.in/frontend/react-js/projects-showcase/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1>Oops! Something Went Wrong</h1>\n      <p>We cannot seem to find the page you are looking for</p>\n      <button type=\"button\" onClick={this.retry}>\n        Retry\n      </button>\n    </div>\n  )\n\n  retry = () => {\n    this.fetchProjects()\n  }\n\n  renderPageView = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderInProgressView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {activeCategoryId} = this.state\n    return (\n      <div className=\"app-container\">\n        <nav className=\"nav-container\">\n          <img\n            className=\"nav-image\"\n            src=\"https://assets.ccbp.in/frontend/react-js/projects-showcase/website-logo-img.png\"\n            alt=\"website logo\"\n          />\n        </nav>\n        <div className=\"list-container\">\n          <select\n            className=\"select-class\"\n            onChange={this.handleCategoryChange}\n            value={activeCategoryId}\n            data-testid=\"categorySelector\"\n          >\n            {categoriesList.map(category => (\n              <option key={category.id} value={category.id}>\n                {category.displayText}\n              </option>\n            ))}\n          </select>\n          {this.renderPageView()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProjectsShowCase\n","import './App.css'\nimport ProjectsShowCase from './components/ProjectShowCase'\n\nconst App = () => <ProjectsShowCase />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}